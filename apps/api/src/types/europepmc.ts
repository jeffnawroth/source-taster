/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

// Custom types for Europe PMC API responses (not included in OpenAPI spec)

export interface EuropePmcSearchResponse {
  version: string
  hitCount: number
  nextCursorMark?: string
  resultList: {
    result: EuropePmcWork[]
  }
}

export interface EuropePmcWork {
  // Core identifiers
  id: string
  source: string
  pmid?: string
  pmcid?: string
  doi?: string

  // Basic metadata
  title?: string
  authorString?: string
  journalTitle?: string
  pubYear?: string

  // Detailed publication info
  journalVolume?: string
  issue?: string
  pageInfo?: string
  abstractText?: string

  // Date information
  firstPublicationDate?: string
  electronicPublicationDate?: string
  printPublicationDate?: string

  // Structured author information
  authorList?: {
    author: Array<{
      firstName?: string
      lastName?: string
      initials?: string
      fullName?: string
      affiliation?: string
    }>
  }

  // Journal information
  journalInfo?: {
    journal?: {
      title?: string
      medlineAbbreviation?: string
      ISSN?: string
      publisherName?: string
    }
  }

  // ISSN variants
  journalIssn?: string

  // Publication types
  pubTypeList?: {
    pubType: string | string[]
  }

  // External identifiers
  extId?: string

  // Additional metadata
  language?: string
  inEPMC?: string
  inPMC?: string
  hasPDF?: string
  hasBook?: string
  hasSuppl?: string
  citedByCount?: number

  // Full text availability
  isOpenAccess?: string
  fullTextUrlList?: {
    fullTextUrl: Array<{
      availability: string
      availabilityCode: string
      documentStyle: string
      site: string
      url: string
    }>
  }
}

// Generated OpenAPI types below...

export interface paths {
  '/{source}/{id}/references': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve a count and list of publications referenced in a given publication. */
    get: operations['references']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{id}/supplementaryFiles': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve supplementary files where we have these for our full text. The files will automatically download in zip format. Note that all supplementary files can be retrieved with the exception of non-Open Access images. */
    get: operations['supplementaryFiles']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/metrics': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['Metrics']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/searchPOST': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Use this module to search our publication database. For more information on query syntax, search field combination and other curiosities, see the Europe PMC help page
     * @description This module must be used with the header Content-type:application/x-www-form-urlencoded.<br/>This means that all the parameters must be passed in the request body in the url encoded form. Construct your POST search requests as follows:<br/><br/>POST https://www.ebi.ac.uk/europepmc/webservices/rest/searchPOST with request body query=cancer&resultType=core&pageSize=10
     */
    post: operations['searchPOST']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{source}/{id}/citations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve a count and list of publications which cite a given publication. */
    get: operations['citations']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/evaluations/{source}/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve evaluations for a given publication. */
    get: operations['evaluations']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{source}/{id}/databaseLinks': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve a count and list of biological database records that have cited a given publication (cross references). */
    get: operations['databaseLinks']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{source}/{id}/labsLinks': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** This module gives access to the External Links provided by 3rd parties (to extend Europe PMC content). See the Europe PMC External Links Service page for more details. Use this module to return the External Links for a given source (src) and identifier (ext_id) combination, or by the external content provider (providerId). */
    get: operations['labsLinks']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{id}/fullTextXML': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve the full text in XML format for the Open Access subset of our full text publications. */
    get: operations['fullTextXML']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{id}/bookXML': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Use this module to retrieve book XML formatted full text for the Open Access subset of the Europe PMC bookshelf. */
    get: operations['bookXML']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/{source}/{id}/datalinks': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Use this module to retrieve data-literature links of the API modules databaseLinks, labsLinks and textMinedTerms consolidated in one web service module and returns them in Scholix format.
     * @description Details about the Scholix format can be found <a target="_blank" href="http://www.scholix.org/schema">here</a>
     */
    get: operations['dataLinks']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/status-update-search': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Use this module to search for article status update
     * @description This module must be used with the header Content-type:application/json.<br/>This means that all the parameters must be passed in the request body as a JSON object.<br/>Find out more <a href="https://europepmc.org/AboutArticleStatusMonitor">About the article status monitor</a>, how updates are obtained and whatâ€™s included in the data.<br/>Construct your POST search requests as follows:<br/><br/>POST https://www.ebi.ac.uk/europepmc/webservices/rest/status-update-search with request body {  ids: [    {      src: string,      extId: string    }  ]}
     */
    post: operations['statusUpdateSearch']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/article/{source}/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Use this module to search our publication database with a specific source and its id. It aslo accepts resultType, format, callback, debug and email query parameters.
     * @description This module adheres to the CORS standard of headers to enable javascript cross-domain search. <br/>Construct your URL for search requests as follows:<br/><br/>GET https://www.ebi.ac.uk/europepmc/webservices/rest/article/{source}/{id}<br/><br/>
     */
    get: operations['article']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/profile': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Use this module to obtain a 'profile' of hit counts from our database for various publication types and data sources.
     * @description This module adheres to the CORS standard of headers to enable javascript cross-domain search. <br/>Construct your URL for profile requests as follows:<br/><br/>GET https://www.ebi.ac.uk/europepmc/webservices/rest/profile?query=parameters<br/><br/>Note that for this module, the user may specify either a slash symbol (/) or a question mark symbol (?) after the method name, and before the query.For example: profile?query=parameters or profile/query=parameters
     */
    get: operations['profile']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/search': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Use this module to search our publication database. For more information on query syntax, search field combination and other curiosities, see the Europe PMC help page
     * @description This module adheres to the CORS standard of headers to enable javascript cross-domain search.Construct your URL for search requests as follows: <br/><br/>GET https://www.ebi.ac.uk/europepmc/webservices/rest/search?query=parameters <br/><br/>Note that for this module, the user may specify either a slash symbol (/) or a question mark symbol (?) after the method name, and before the query. For example:search?query=parameters or search/query=parameters
     */
    get: operations['search']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/fields': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Use this module to see a full list of our indexed search fields, along with the datasets they can be used for.
     * @description A note is made above in the <a href="/RestfulWebService#oview" target="_blank">Overview</a> about the different versions of the web service available. Construct your URL for a fields request as follows for the production version:<br/><br/>GET https://www.ebi.ac.uk/europepmc/webservices/rest/fields <br/><br/>Construct your URL for a fields request as follows for the test version of the web service:<br/><br/>GET https://www.ebi.ac.uk/europepmc/webservices/test/rest/fields.
     */
    get: operations['fields']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ArticleInput: {
      src?: string
      extId?: string
    }
    ArticleStatusSearchRequest: {
      ids: components['schemas']['ArticleInput'][]
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  references: {
    parameters: {
      query?: {
        /** @description Specify the section of the references list you wish to retrieve, where applicable. Page numbers start at 1; default value is 1. */
        page?: number
        /** @description Specify the number of references you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000. */
        pageSize?: number
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/MED/29867326/references */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  supplementaryFiles: {
    parameters: {
      query?: {
        /** @description With this optional parameter all inline images can be excluded from the ZIP file. The default value is true. */
        includeInlineImage?: 'y' | 'yes' | 'true' | 'n' | 'no' | 'false'
      }
      header?: never
      path: {
        /** @description All full text publications have external IDs starting 'PMC___', as with the following examples: https://www.ebi.ac.uk/europepmc/webservices/rest/PMC3258128/supplementaryFiles. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  Metrics: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/plain': string
        }
      }
    }
  }
  searchPOST: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/x-www-form-urlencoded': {
          /** @description User query. Possible options are:<br/><br/>- a keyword or combination of keywords (e.g. HPV virus).<br/>- a phrase with enclosing speech marks (e.g. "human malaria").<br/>- a fielded search (e.g. auth:stoehr).<br/>Available search fields are listed in the Appendix 1 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a> or can be retrieved using the <a href="https://europepmc.org/RestfulWebService#!/Europe32PMC32Articles32RESTful32API/fields">fields module</a> of the API.<br/>- a specific publication (e.g. ext_id:781840 src:med).<br/>Specify <i>ext_id</i> as the article identifier, and <i>src</i> as the source database. List of the data sources can be found on the help pages or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
          query: string
          /**
           * @description Response Type. This parameter determines the fields returned by XML and JSON formats, but it has no effect on the DC format. It can have the following values:<ul class="swagger_param_list"><li>idlist: returns a list of IDs and sources for the given search terms</li><li>lite: returns key metadata for the given search terms</li><li>core: returns full metadata for a given publication ID; including abstract, full text links, and MeSH terms</li></ul>
           * @default lite
           * @enum {string}
           */
          resultType?: 'idlist' | 'lite' | 'core'
          /**
           * @description Synonym searches are not made by default (default value = 'false'), however queries can be expanded using MeSH terminology. For example aspirin, a synonym would be acetylsalicylic acid; this could be included in the search by setting the parameter value to 'true'. The parameter value is case insensitive
           * @default false
           * @enum {string}
           */
          synonym?: 'TRUE' | 'Y' | 'YES' | 'FALSE' | 'N' | 'NO'
          /**
           * @description Specify the cursorMark for pagination of the result list. For the first request you can omit the parameter or leave the cursorMark empty or use the default value * (asterisk sign). For every following page use the value of the returned nextCursorMark element.
           * @default *
           */
          cursorMark?: string
          /**
           * Format: int32
           * @description Specify the number of articles you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000.
           * @default 25
           */
          pageSize?: number
          /** @description The default sort order is <a href="http://europepmc.org/Help#sortrelevance">relevance</a>.<br/>Specify the sort field and sort order. This parameter provides "asc" or "desc" order for every single-valued field: P_PDATE_D, AUTH_FIRST, CITED etc. For example sorting by CITED in ascending order: CITED asc */
          sort?: string
          /**
           * @description Format of the response. It can be either XML, JSON or DC (Dublin Core). See details <a href="#format">here</a>.
           * @enum {string}
           */
          format?: 'xml' | 'json' | 'dc'
          /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
          callback?: string
          /** @description This optional parameter registers the user's email address with EBI. The user can then be contacted about Web Service related news.  */
          email?: string
        }
      }
    }
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  citations: {
    parameters: {
      query?: {
        /** @description Specify the section of the citations list you wish to retrieve, where applicable. Page numbers start at 1; default value is 1. */
        page?: number
        /** @description Specify the number of citations you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000. */
        pageSize?: number
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/MED/9843981/citations */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  evaluations: {
    parameters: {
      query?: {
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/evaluations/MED/29867326 */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  databaseLinks: {
    parameters: {
      query?: {
        /** @description Specify the database you wish to retrieve links for. The default is to return links for all databases. It can be one of the values from the following list: <ul class="swagger_param_list"><li><a href="https://www.ebi.ac.uk/arrayexpress/" target="_blank">ARXPR</a></i> is a database of functional genomics experiments</li><li><a href="https://www.ebi.ac.uk/chebi/" target="_blank">ChEBI</a></i> is a database and ontology of chemical entities of biological interest</li><li><a href="https://www.ebi.ac.uk/chembldb/" target="_blank">ChEMBL</a></i> is a database of bioactive drug-like small molecules</li><li><a href="https://www.ebi.ac.uk/ena/" target="_blank">EMBL</a></i> (now ENA) provides a comprehensive record of the world's nucleotide sequencing information</li><li><a href="https://www.ebi.ac.uk/intact/" target="_blank">IntAct</a></i> provides a freely available, open source database system and analysis tools for molecular interaction data</li><li><a href="https://www.ebi.ac.uk/interpro/" target="_blank">InterPro</a></i> provides functional analysis of proteins by classifying them into families and predicting domains and important sites</li><li><a href="https://www.ncbi.nlm.nih.gov/omim/" target="_blank">OMIM</a></i> is a comprehensive and authoritative compendium of human genes and genetic phenotypes</li><li><a href="https://www.ebi.ac.uk/pdbe/" target="_blank">PDB</a></i> (or PDBe) is the European resource for the collection, organisation and dissemination of data on biological macromolecular structures</li><li><a href="https://www.ebi.ac.uk/pride/archive/" target="_blank">PRIDE</a></i> (PRoteomics IDEntifications) database is a centralized, standards compliant, public data repository for proteomics data, including protein and peptide identifications, post-translational modifications and supporting spectral evidence</li><li><a href="http://www.uniprot.org/" target="_blank">UniProt</a></i> provides a comprehensive and freely accessible resource of protein sequence and functional information</li></ul> */
        database?: 'ARXPR' | 'CHEBI' | 'CHEMBL' | 'EMBL' | 'INTACT' | 'INTERPRO' | 'OMIM' | 'PDB' | 'PRIDE' | 'UNIPROT'
        /** @description Specify the section of the database links list you wish to retrieve, where applicable. Page numbers start at 1; default value is 1. */
        page?: number
        /** @description Specify the number of database links you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000. */
        pageSize?: number
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/MED/30067176/databaseLinks */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  labsLinks: {
    parameters: {
      query?: {
        /** @description Specify the provider(s) of the the External Links to retrieve */
        providerIds?: number[]
        /** @description Specify the section of the  External Links list you wish to retrieve, where applicable. Page numbers start at 1; default value is 1. */
        page?: number
        /** @description Specify the number of External Links you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000. */
        pageSize?: number
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/MED/30067176/labsLinks */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  fullTextXML: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description All full text publications have external IDs starting 'PMC___', like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/PMC3257301/fullTextXML */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  bookXML: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description This method will return book XML that corresponds to either the book's metadata PubMed ID (https://www.ebi.ac.uk/europepmc/webservices/rest/10510270/bookXML), or the Europe PMC 'NBK' (https://www.ebi.ac.uk/europepmc/webservices/rest/NBK32884/bookXML). Note that only Open Access XML can be retrieved. Also note that the PMID and NBK identifiers are displayed on the Europe PMC front-end in a search results list */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  dataLinks: {
    parameters: {
      query?: {
        /** @description Restrict the response to links of a certain category. In this context the category will always be the name of the resource hosting data linked to the publication in Europe PMC. */
        category?: 'Access to Understanding' | 'Altmetric' | 'Arthritis Research UK' | 'Bibliomics and Text Mining Group (BiTeM)' | 'BioModels' | 'BioSamples' | 'BioStudies' | 'Cellosaurus' | 'Centre for Reviews and Dissemination (UK)' | 'Chemicals' | 'Clinical Trials' | 'COSMIC' | 'Data Citations' | 'DEPOD' | 'Diseases' | 'DisGeNET' | 'DisProt' | 'Dryad Digital Repository' | 'EBI Metagenomics' | 'EBI Train Online' | 'Electron Microscopy Data Bank' | 'EMBL Press Releases' | 'EMPIAR' | 'ENCODE: Encyclopedia of DNA Elements' | 'EuroFIR Document Repository' | 'European Genome-Phenome Archive' | 'F1000Prime' | 'FlyBase' | 'Functional Genomics Experiments' | 'Gene Ontology (GO) Terms' | 'Genes & Proteins' | 'GenomeRNAi' | 'GOA Project' | 'HAL Open Archive' | 'IntAct' | 'iPTMnet' | 'IUPHAR/BPS Guide to Pharmacology' | 'Kudos' | 'LinkÃ¶ping University Digital Archive' | 'Marie Curie Press Releases' | 'Medical Research Council' | 'MetaboLights' | 'MGnify' | 'ModelArchive' | 'Mouse Genome Informatics (MGI)' | 'National Centre for Text Mining (NaCTeM)' | 'Neuroscience Information Framework' | 'NHGRI-EBI GWAS Catalog' | 'NTNU/BSC' | 'Nucleotide Sequences' | 'Open Access at Bielefeld University' | 'Open Access at Lund University' | 'Open Targets Platform' | 'OpenAIRE' | 'PANGAEA' | 'Pfam' | 'PhenoMiner' | 'PomBase\\' | 'University of Cambridge' | 'preLights' | 'Protein Families' | 'Protein Interactions' | 'Protein Structures' | 'ProteomeXchange' | 'Proteomics Data' | 'protocols.io' | 'Publons' | 'PubTator (NCBI)' | 'Reactome' | 'Related Immune Epitope Information - Immune Epitope Database and Analysis Resource' | 'Reuse Recipe Document' | 'SABIO-RK' | 'Saccharomyces Genome Database' | 'SIGNOR' | 'STORRE: University of Stirling repository' | 'STRENDA DB' | 'Versus Arthritis' | 'Wellcome Trust' | 'WikiPathways' | 'Wikipedia' | 'Worldwide Cancer Research' | 'WormBase' | 'Ximbio' | 'ZFIN'
        /** @description Limit the response to links that were obtained through: <ul class="swagger_param_list"><li>Text mined accession numbers (tm_accession)</li><li>Text mined terms (tm_term)</li><li>External links (ext_links)</li><li>Database links (submission)</li></ul> */
        obtainedBy?: 'tm_accession' | 'tm_term' | 'ext_links' | 'submission'
        /** @description Limit the response to links that were updated on or after the date given in the format DD-MM-YYYY */
        fromDate?: string
        /** @description Limit the response to links tagged with the specific tags. When using several tags at once they are to be separated by comma. Possible values are : <ul class="swagger_param_list"><li>related_data: refers to data that is built on top of other data (e.g. IntAct protein interactions).</li><li>supporting_data: refers to  data hosted in databases that host primary data, i.e. data that is not built on top of other data (e.g. protein structures (PDBe) and nucleotide sequences (ENA)))</li><li>plain_english: plain english content related to the linked publication (e.g. press releases, lay summaries).</li><li>fulltext: datalinks to resources providing the fulltext publication.</li><li>other: datalinks not captured by the other tags (e.g. training courses and peer reviews)</li></ul> */
        tags?: string
        /** @description Limit the number of links returned per section. Each "obtainedBy" process of each category is an individual section */
        sectionLimit?: string
        /** @description This optional parameter registers the user's email address with EBI. The user can then be contacted about Web Service related news.  */
        email?: string
        ref?: string
        /** @description Format of the response. It can be either XML or JSON. */
        format?: 'xml' | 'json'
      }
      header?: never
      path: {
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/MED/30067176/datalinks */
        id: string
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'HIR' | 'PAT' | 'PMC' | 'PPR'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  statusUpdateSearch: {
    parameters: {
      query?: {
        /** @description Format of the response. It can be either XML, JSON. See details <a href="#format">here</a>. */
        format?: 'xml' | 'json'
      }
      header?: never
      path?: never
      cookie?: never
    }
    /** @description JSON request body containing all the input article ID(s) */
    requestBody?: {
      content: {
        'application/json': components['schemas']['ArticleStatusSearchRequest']
      }
    }
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  article: {
    parameters: {
      query?: {
        /** @description Response Type. This parameter determines the fields returned by XML and JSON formats, but it has no effect on the DC format. It can have the following values:<ul class="swagger_param_list"><li>idlist: returns a list of IDs and sources for the given search terms</li><li>lite: returns key metadata for the given search terms</li><li>core: returns full metadata for a given publication ID; including abstract, full text links, and MeSH terms</li></ul> */
        resultType?: 'idlist' | 'lite' | 'core'
        /** @description Format of the response. It can be either XML, JSON or DC (Dublin Core). See details <a href="#format">here</a> */
        format?: 'xml' | 'json' | 'dc'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
        /** @description This optional parameter registers the user's email address with EBI. The user can then be contacted about Web Service related news.  */
        email?: string
      }
      header?: never
      path: {
        /** @description The source is a three letter code representing one of the data sources. It is returned as the <i>source</i> element by the search module. Further information on Europe PMC data sources can be found on the <a href="/Help#whatserachingEPMC">help page</a> or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        source: 'AGR' | 'CBA' | 'CIT' | 'CTX' | 'ETH' | 'HIR' | 'MED' | 'NBK' | 'PAT' | 'PMC' | 'PPR'
        /** @description Publication identifier. It is returned as <i>id</i> element by the search module. Insert publication identifier into your URL along with the publication source, like the following example: https://www.ebi.ac.uk/europepmc/webservices/rest/article/MED/3426844/ */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  profile: {
    parameters: {
      query: {
        /** @description User query. Possible options are:<br/><br/>- a keyword or combination of keywords (e.g. HPV virus).<br/><br/>- a phrase with enclosing speech marks (e.g. "human malaria").<br/><br/>- a fielded search (e.g. auth:stoehr).<br/>Available search fields are listed in the Appendix 1 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a> or can be retrieved using the <a href="https://europepmc.org/RestfulWebService#!/Europe32PMC32Articles32RESTful32API/fields">fields module</a> of the API.<br/><br/>- a specific publication (e.g. ext_id:781840 src:med).<br/>Specify <i>ext_id</i> as the article identifier, and <i>src</i> as the source database. List of the data sources can be found on the help pages or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        query: string
        /** @description The profile type can have one of the following values:<ul class="swagger_param_list"><li>pub_type: returns a profile of various publication types.</li><li>source: returns a profile for the various data sources we obtain publications from.</li><li>all: returns a profile for all of the above (default value).</li></ul> */
        profiletype?: 'pub_type' | 'source' | 'all'
        /** @description Synonym searches are not made by default (default value = 'false'), however queries can be expanded using MeSH terminology. For example aspirin, a synonym would be acetylsalicylic acid; this could be included in the search by setting the parameter value to 'true'. The parameter value is case insensitive */
        synonym?: 'TRUE' | 'Y' | 'YES' | 'FALSE' | 'N' | 'NO'
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
        /** @description This optional parameter registers the user's email address with EBI. The user can then be contacted about Web Service related news.  */
        email?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  search: {
    parameters: {
      query: {
        /** @description User query. Possible options are:<br/><br/>- a keyword or combination of keywords (e.g. HPV virus).<br/>- a phrase with enclosing speech marks (e.g. "human malaria").<br/>- a fielded search (e.g. auth:stoehr).<br/>Available search fields are listed in the Appendix 1 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a> or can be retrieved using the <a href="https://europepmc.org/RestfulWebService#!/Europe32PMC32Articles32RESTful32API/fields">fields module</a> of the API.<br/>- a specific publication (e.g. ext_id:781840 src:med) <br/>Specify <i>ext_id</i> as the article identifier, and <i>src</i> as the source database. List of the data sources can be found on the help pages or in section 3 of the <a href="/docs/EBI_Europe_PMC_Web_Service_Reference.pdf">Reference Guide</a>. */
        query: string
        /** @description Response Type. This parameter determines the fields returned by XML and JSON formats, but it has no effect on the DC format. It can have the following values:<ul class="swagger_param_list"><li>idlist: returns a list of IDs and sources for the given search terms</li><li>lite: returns key metadata for the given search terms</li><li>core: returns full metadata for a given publication ID; including abstract, full text links, and MeSH terms</li></ul> */
        resultType?: 'idlist' | 'lite' | 'core'
        /** @description Synonym searches are not made by default (default value = 'false'), however queries can be expanded using MeSH terminology. For example aspirin, a synonym would be acetylsalicylic acid; this could be included in the search by setting the parameter value to 'true'. The parameter value is case insensitive */
        synonym?: 'TRUE' | 'Y' | 'YES' | 'FALSE' | 'N' | 'NO'
        /** @description Specify the cursorMark for pagination of the result list. For the first request you can omit the parameter or leave the cursorMark empty or use the default value * (asterisk sign). For every following page use the value of the returned nextCursorMark element. */
        cursorMark?: string
        /** @description Specify the number of articles you wish to retrieve in each page. The default value is 25 when the parameter is not used. The maximum allowable number of results per page is 1000. */
        pageSize?: number
        /** @description The default sort order is <a href="http://europepmc.org/Help#sortrelevance">relevance</a>.<br/>Specify the sort field and sort order. This parameter provides "asc" or "desc" order for every single-valued field: P_PDATE_D, AUTH_FIRST, FIRST_IDATE_D, CITED etc. For example sorting by CITED in ascending order: CITED asc */
        sort?: string
        /**
         * @description Format of the response. It can be either XML, JSON or DC (Dublin Core). See details <a href="#format">here</a>
         * @enum {string}
         */
        format?: 'xml' | 'json' | 'dc'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
        /** @description This optional parameter registers the user's email address with EBI. The user can then be contacted about Web Service related news.  */
        email?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  fields: {
    parameters: {
      query?: {
        /** @description Format of the response. It can be either XML, JSON. */
        format?: 'xml' | 'json'
        /** @description Use the callback parameter to make cross-domain requests and retrieve JSON data. The value is user specified. The web service wraps its response with the given callback value. Format value must be JSON. */
        callback?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description successful operation */
      default: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}

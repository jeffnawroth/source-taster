/* tslint:disable */
/* eslint-disable */
/**
 * OpenAlex
 * ![](https://raw.githubusercontent.com/ourresearch/openalex-docs/main/.gitbook/assets/OpenAlex-logo-5.png)  **OpenAlex** is a fully open catalog of the global research system.  It\'s named after the [ancient Library of Alexandria](https://en.wikipedia.org/wiki/Library_of_Alexandria) and made by the nonprofit [OurResearch](https://ourresearch.org/).  ## OpenAPI Specification  [Mearman/openalex-api-spec](https://github.com/Mearman/openalex-api-spec)  This OpenAPI specification is reverse-engineered and derived from spec generated by [openapi-devtools](https://github.com/AndrewWalsh/openapi-devtools).  The specification document itself is OpenAPI version 3.1 and is generated from TypeScript source code.  [![Open in](https://img.shields.io/badge/Open%20in-Swagger%20UI-85EA2D?style=for-the-badge&logo=Swagger&link=https://mearman.github.io/openalex-swagger-ui-react/)](https://mearman.github.io/openalex-swagger-ui-react/)  **[Releases](https://github.com/Mearman/openalex-api-spec/releases)**  ## Clients  [![TypeScript](https://img.shields.io/badge/TypeScript-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript)](https://github.com/Mearman/openalex-typescript)  [![TypeScript Fetch](https://img.shields.io/badge/TypeScript%20Fetch-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript-fetch)](https://github.com/Mearman/openalex-typescript-fetch)  [![TypeScript Node](https://img.shields.io/badge/TypeScript%20Node-339933?style=for-the-badge&logo=Node.js&logoColor=white&link=https://github.com/Mearman/openalex-typescript-node)](https://github.com/Mearman/openalex-typescript-node)  [![Python](https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=Python&logoColor=white&link=https://github.com/Mearman/openalex-python)](https://github.com/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-CodeSpaces-181717?style=for-the-badge&logo=GitHub&link=https://codespaces.new/Mearman/openalex-python)](https://codespaces.new/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-Colab-F9AB00?style=for-the-badge&logo=Google%20Colab&link=https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)](https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)  ---
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CountsByYear } from './CountsByYear';
import {
    CountsByYearFromJSON,
    CountsByYearFromJSONTyped,
    CountsByYearToJSON,
} from './CountsByYear';
import type { DehydratedConceptArray } from './DehydratedConceptArray';
import {
    DehydratedConceptArrayFromJSON,
    DehydratedConceptArrayFromJSONTyped,
    DehydratedConceptArrayToJSON,
} from './DehydratedConceptArray';
import type { SourceSocietiesInner } from './SourceSocietiesInner';
import {
    SourceSocietiesInnerFromJSON,
    SourceSocietiesInnerFromJSONTyped,
    SourceSocietiesInnerToJSON,
} from './SourceSocietiesInner';
import type { ApcPrices } from './ApcPrices';
import {
    ApcPricesFromJSON,
    ApcPricesFromJSONTyped,
    ApcPricesToJSON,
} from './ApcPrices';
import type { SummaryStats } from './SummaryStats';
import {
    SummaryStatsFromJSON,
    SummaryStatsFromJSONTyped,
    SummaryStatsToJSON,
} from './SummaryStats';
import type { Ids } from './Ids';
import {
    IdsFromJSON,
    IdsFromJSONTyped,
    IdsToJSON,
} from './Ids';

/**
 * 
 * @export
 * @interface SourceSchema
 */
export interface SourceSchema {
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    abbreviatedTitle?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SourceSchema
     */
    alternateTitles?: Array<string>;
    /**
     * 
     * @type {ApcPrices}
     * @memberof SourceSchema
     */
    apcPrices?: ApcPrices;
    /**
     * 
     * @type {number}
     * @memberof SourceSchema
     */
    apcUsd?: number;
    /**
     * 
     * @type {number}
     * @memberof SourceSchema
     */
    citedByCount?: number;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    countryCode?: string;
    /**
     * 
     * @type {CountsByYear}
     * @memberof SourceSchema
     */
    countsByYear?: CountsByYear;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    createdDate?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    homepageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    hostOrganization?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SourceSchema
     */
    hostOrganizationLineage?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    hostOrganizationName?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    id: string;
    /**
     * 
     * @type {Ids}
     * @memberof SourceSchema
     */
    ids?: Ids;
    /**
     * 
     * @type {boolean}
     * @memberof SourceSchema
     */
    isInDoaj?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SourceSchema
     */
    isOa?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof SourceSchema
     */
    issn?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    issnL?: string;
    /**
     * 
     * @type {Array<SourceSocietiesInner>}
     * @memberof SourceSchema
     */
    societies?: Array<SourceSocietiesInner>;
    /**
     * 
     * @type {SummaryStats}
     * @memberof SourceSchema
     */
    summaryStats?: SummaryStats;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    updatedDate?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSchema
     */
    worksApiUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof SourceSchema
     */
    worksCount?: number;
    /**
     * 
     * @type {DehydratedConceptArray}
     * @memberof SourceSchema
     */
    xConcepts?: DehydratedConceptArray;
}

/**
 * Check if a given object implements the SourceSchema interface.
 */
export function instanceOfSourceSchema(value: object): value is SourceSchema {
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function SourceSchemaFromJSON(json: any): SourceSchema {
    return SourceSchemaFromJSONTyped(json, false);
}

export function SourceSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'abbreviatedTitle': json['abbreviated_title'] == null ? undefined : json['abbreviated_title'],
        'alternateTitles': json['alternate_titles'] == null ? undefined : json['alternate_titles'],
        'apcPrices': json['apc_prices'] == null ? undefined : ApcPricesFromJSON(json['apc_prices']),
        'apcUsd': json['apc_usd'] == null ? undefined : json['apc_usd'],
        'citedByCount': json['cited_by_count'] == null ? undefined : json['cited_by_count'],
        'countryCode': json['country_code'] == null ? undefined : json['country_code'],
        'countsByYear': json['counts_by_year'] == null ? undefined : CountsByYearFromJSON(json['counts_by_year']),
        'createdDate': json['created_date'] == null ? undefined : json['created_date'],
        'displayName': json['display_name'],
        'homepageUrl': json['homepage_url'] == null ? undefined : json['homepage_url'],
        'hostOrganization': json['host_organization'] == null ? undefined : json['host_organization'],
        'hostOrganizationLineage': json['host_organization_lineage'] == null ? undefined : json['host_organization_lineage'],
        'hostOrganizationName': json['host_organization_name'] == null ? undefined : json['host_organization_name'],
        'id': json['id'],
        'ids': json['ids'] == null ? undefined : IdsFromJSON(json['ids']),
        'isInDoaj': json['is_in_doaj'] == null ? undefined : json['is_in_doaj'],
        'isOa': json['is_oa'] == null ? undefined : json['is_oa'],
        'issn': json['issn'] == null ? undefined : json['issn'],
        'issnL': json['issn_l'] == null ? undefined : json['issn_l'],
        'societies': json['societies'] == null ? undefined : ((json['societies'] as Array<any>).map(SourceSocietiesInnerFromJSON)),
        'summaryStats': json['summary_stats'] == null ? undefined : SummaryStatsFromJSON(json['summary_stats']),
        'type': json['type'] == null ? undefined : json['type'],
        'updatedDate': json['updated_date'] == null ? undefined : json['updated_date'],
        'worksApiUrl': json['works_api_url'] == null ? undefined : json['works_api_url'],
        'worksCount': json['works_count'] == null ? undefined : json['works_count'],
        'xConcepts': json['x_concepts'] == null ? undefined : DehydratedConceptArrayFromJSON(json['x_concepts']),
    };
}

export function SourceSchemaToJSON(value?: SourceSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'abbreviated_title': value['abbreviatedTitle'],
        'alternate_titles': value['alternateTitles'],
        'apc_prices': ApcPricesToJSON(value['apcPrices']),
        'apc_usd': value['apcUsd'],
        'cited_by_count': value['citedByCount'],
        'country_code': value['countryCode'],
        'counts_by_year': CountsByYearToJSON(value['countsByYear']),
        'created_date': value['createdDate'],
        'display_name': value['displayName'],
        'homepage_url': value['homepageUrl'],
        'host_organization': value['hostOrganization'],
        'host_organization_lineage': value['hostOrganizationLineage'],
        'host_organization_name': value['hostOrganizationName'],
        'id': value['id'],
        'ids': IdsToJSON(value['ids']),
        'is_in_doaj': value['isInDoaj'],
        'is_oa': value['isOa'],
        'issn': value['issn'],
        'issn_l': value['issnL'],
        'societies': value['societies'] == null ? undefined : ((value['societies'] as Array<any>).map(SourceSocietiesInnerToJSON)),
        'summary_stats': SummaryStatsToJSON(value['summaryStats']),
        'type': value['type'],
        'updated_date': value['updatedDate'],
        'works_api_url': value['worksApiUrl'],
        'works_count': value['worksCount'],
        'x_concepts': DehydratedConceptArrayToJSON(value['xConcepts']),
    };
}


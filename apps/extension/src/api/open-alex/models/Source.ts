/* tslint:disable */
/* eslint-disable */
/**
 * OpenAlex
 * ![](https://raw.githubusercontent.com/ourresearch/openalex-docs/main/.gitbook/assets/OpenAlex-logo-5.png)  **OpenAlex** is a fully open catalog of the global research system.  It\'s named after the [ancient Library of Alexandria](https://en.wikipedia.org/wiki/Library_of_Alexandria) and made by the nonprofit [OurResearch](https://ourresearch.org/).  ## OpenAPI Specification  [Mearman/openalex-api-spec](https://github.com/Mearman/openalex-api-spec)  This OpenAPI specification is reverse-engineered and derived from spec generated by [openapi-devtools](https://github.com/AndrewWalsh/openapi-devtools).  The specification document itself is OpenAPI version 3.1 and is generated from TypeScript source code.  [![Open in](https://img.shields.io/badge/Open%20in-Swagger%20UI-85EA2D?style=for-the-badge&logo=Swagger&link=https://mearman.github.io/openalex-swagger-ui-react/)](https://mearman.github.io/openalex-swagger-ui-react/)  **[Releases](https://github.com/Mearman/openalex-api-spec/releases)**  ## Clients  [![TypeScript](https://img.shields.io/badge/TypeScript-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript)](https://github.com/Mearman/openalex-typescript)  [![TypeScript Fetch](https://img.shields.io/badge/TypeScript%20Fetch-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript-fetch)](https://github.com/Mearman/openalex-typescript-fetch)  [![TypeScript Node](https://img.shields.io/badge/TypeScript%20Node-339933?style=for-the-badge&logo=Node.js&logoColor=white&link=https://github.com/Mearman/openalex-typescript-node)](https://github.com/Mearman/openalex-typescript-node)  [![Python](https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=Python&logoColor=white&link=https://github.com/Mearman/openalex-python)](https://github.com/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-CodeSpaces-181717?style=for-the-badge&logo=GitHub&link=https://codespaces.new/Mearman/openalex-python)](https://codespaces.new/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-Colab-F9AB00?style=for-the-badge&logo=Google%20Colab&link=https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)](https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)  ---
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CountsByYearInner } from './CountsByYearInner';
import {
    CountsByYearInnerFromJSON,
    CountsByYearInnerFromJSONTyped,
    CountsByYearInnerToJSON,
    CountsByYearInnerToJSONTyped,
} from './CountsByYearInner';
import type { SourceSocietiesInner } from './SourceSocietiesInner';
import {
    SourceSocietiesInnerFromJSON,
    SourceSocietiesInnerFromJSONTyped,
    SourceSocietiesInnerToJSON,
    SourceSocietiesInnerToJSONTyped,
} from './SourceSocietiesInner';
import type { SummaryStats } from './SummaryStats';
import {
    SummaryStatsFromJSON,
    SummaryStatsFromJSONTyped,
    SummaryStatsToJSON,
    SummaryStatsToJSONTyped,
} from './SummaryStats';
import type { Ids } from './Ids';
import {
    IdsFromJSON,
    IdsFromJSONTyped,
    IdsToJSON,
    IdsToJSONTyped,
} from './Ids';
import type { DehydratedConcept } from './DehydratedConcept';
import {
    DehydratedConceptFromJSON,
    DehydratedConceptFromJSONTyped,
    DehydratedConceptToJSON,
    DehydratedConceptToJSONTyped,
} from './DehydratedConcept';

/**
 * 
 * @export
 * @interface Source
 */
export interface Source {
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    abbreviated_title?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Source
     */
    alternate_titles?: Array<string>;
    /**
     * 
     * @type {Array<object>}
     * @memberof Source
     */
    apc_prices?: Array<object>;
    /**
     * 
     * @type {number}
     * @memberof Source
     */
    apc_usd?: number;
    /**
     * 
     * @type {number}
     * @memberof Source
     */
    cited_by_count?: number;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    country_code?: string;
    /**
     * 
     * @type {Array<CountsByYearInner>}
     * @memberof Source
     */
    counts_by_year?: Array<CountsByYearInner>;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    created_date?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    display_name: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    homepage_url?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    host_organization?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Source
     */
    host_organization_lineage?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    host_organization_name?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    id: string;
    /**
     * 
     * @type {Ids}
     * @memberof Source
     */
    ids?: Ids;
    /**
     * 
     * @type {boolean}
     * @memberof Source
     */
    is_in_doaj?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Source
     */
    is_oa?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof Source
     */
    issn?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    issn_l?: string;
    /**
     * 
     * @type {Array<SourceSocietiesInner>}
     * @memberof Source
     */
    societies?: Array<SourceSocietiesInner>;
    /**
     * 
     * @type {SummaryStats}
     * @memberof Source
     */
    summary_stats?: SummaryStats;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    updated_date?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    works_api_url?: string;
    /**
     * 
     * @type {number}
     * @memberof Source
     */
    works_count?: number;
    /**
     * 
     * @type {Array<DehydratedConcept>}
     * @memberof Source
     */
    x_concepts?: Array<DehydratedConcept>;
}

/**
 * Check if a given object implements the Source interface.
 */
export function instanceOfSource(value: object): value is Source {
    if (!('display_name' in value) || value['display_name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function SourceFromJSON(json: any): Source {
    return SourceFromJSONTyped(json, false);
}

export function SourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Source {
    if (json == null) {
        return json;
    }
    return {
        
        'abbreviated_title': json['abbreviated_title'] == null ? undefined : json['abbreviated_title'],
        'alternate_titles': json['alternate_titles'] == null ? undefined : json['alternate_titles'],
        'apc_prices': json['apc_prices'] == null ? undefined : json['apc_prices'],
        'apc_usd': json['apc_usd'] == null ? undefined : json['apc_usd'],
        'cited_by_count': json['cited_by_count'] == null ? undefined : json['cited_by_count'],
        'country_code': json['country_code'] == null ? undefined : json['country_code'],
        'counts_by_year': json['counts_by_year'] == null ? undefined : ((json['counts_by_year'] as Array<any>).map(CountsByYearInnerFromJSON)),
        'created_date': json['created_date'] == null ? undefined : json['created_date'],
        'display_name': json['display_name'],
        'homepage_url': json['homepage_url'] == null ? undefined : json['homepage_url'],
        'host_organization': json['host_organization'] == null ? undefined : json['host_organization'],
        'host_organization_lineage': json['host_organization_lineage'] == null ? undefined : json['host_organization_lineage'],
        'host_organization_name': json['host_organization_name'] == null ? undefined : json['host_organization_name'],
        'id': json['id'],
        'ids': json['ids'] == null ? undefined : IdsFromJSON(json['ids']),
        'is_in_doaj': json['is_in_doaj'] == null ? undefined : json['is_in_doaj'],
        'is_oa': json['is_oa'] == null ? undefined : json['is_oa'],
        'issn': json['issn'] == null ? undefined : json['issn'],
        'issn_l': json['issn_l'] == null ? undefined : json['issn_l'],
        'societies': json['societies'] == null ? undefined : ((json['societies'] as Array<any>).map(SourceSocietiesInnerFromJSON)),
        'summary_stats': json['summary_stats'] == null ? undefined : SummaryStatsFromJSON(json['summary_stats']),
        'type': json['type'] == null ? undefined : json['type'],
        'updated_date': json['updated_date'] == null ? undefined : json['updated_date'],
        'works_api_url': json['works_api_url'] == null ? undefined : json['works_api_url'],
        'works_count': json['works_count'] == null ? undefined : json['works_count'],
        'x_concepts': json['x_concepts'] == null ? undefined : ((json['x_concepts'] as Array<any>).map(DehydratedConceptFromJSON)),
    };
}

export function SourceToJSON(json: any): Source {
    return SourceToJSONTyped(json, false);
}

export function SourceToJSONTyped(value?: Source | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'abbreviated_title': value['abbreviated_title'],
        'alternate_titles': value['alternate_titles'],
        'apc_prices': value['apc_prices'],
        'apc_usd': value['apc_usd'],
        'cited_by_count': value['cited_by_count'],
        'country_code': value['country_code'],
        'counts_by_year': value['counts_by_year'] == null ? undefined : ((value['counts_by_year'] as Array<any>).map(CountsByYearInnerToJSON)),
        'created_date': value['created_date'],
        'display_name': value['display_name'],
        'homepage_url': value['homepage_url'],
        'host_organization': value['host_organization'],
        'host_organization_lineage': value['host_organization_lineage'],
        'host_organization_name': value['host_organization_name'],
        'id': value['id'],
        'ids': IdsToJSON(value['ids']),
        'is_in_doaj': value['is_in_doaj'],
        'is_oa': value['is_oa'],
        'issn': value['issn'],
        'issn_l': value['issn_l'],
        'societies': value['societies'] == null ? undefined : ((value['societies'] as Array<any>).map(SourceSocietiesInnerToJSON)),
        'summary_stats': SummaryStatsToJSON(value['summary_stats']),
        'type': value['type'],
        'updated_date': value['updated_date'],
        'works_api_url': value['works_api_url'],
        'works_count': value['works_count'],
        'x_concepts': value['x_concepts'] == null ? undefined : ((value['x_concepts'] as Array<any>).map(DehydratedConceptToJSON)),
    };
}

